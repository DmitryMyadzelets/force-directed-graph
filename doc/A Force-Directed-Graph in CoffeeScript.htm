<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 12 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:0cm;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:72.0pt 72.0pt 72.0pt 72.0pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=EN-GB link=blue vlink=purple>

<div class=WordSection1>

<p class=MsoNormal>Self-Organising Fun: A Force-Directed-Graph in CoffeeScript</p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal><a href="http://fdg.staging.goodpractice.net/">Play with a
     working demo</a></li>
 <li class=MsoNormal><a
     href="https://github.com/biofractal/force-directed-graph">The source code
     on GitHub</a></li>
</ul>

<p class=MsoNormal>I wanted to learn <a href="http://coffeescript.org/">CoffeeScript</a>
so I choose to investigate Force Directed Graphs as a fun learning project.
They appeal not just because self-organisation is intrinsically fascinating but
also because the project would give me the opportunity to compose a whole set
of exciting web technologies including CoffeeScript, JQuery, HTML5 and Processing.js.</p>

<p class=MsoNormal>For more information on Force Directed Graphs please see the
Definitions and Discussion sections below.</p>

<p class=MsoNormal>Technology Stack</p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal><a
     href="http://www.microsoft.com/visualstudio/eng/downloads#d-2012-express">Visual
     Studio 2012 Express</a></li>
 <li class=MsoNormal><a href="https://github.com/creamdog/JurassicCoffee">Jurassic
     Coffee</a> </li>
 <li class=MsoNormal><a href="http://coffeescript.org/">CoffeeScript</a></li>
 <li class=MsoNormal><a href="http://jquery.com/">JQuery</a></li>
 <li class=MsoNormal><a href="http://processingjs.org/">Processing.js</a></li>
 <li class=MsoNormal><a href="http://twitter.github.io/bootstrap/">Bootstrap</a></li>
 <li class=MsoNormal><a href="http://en.wikipedia.org/wiki/HTML5">Html5</a></li>
</ul>

<p class=MsoNormal>The Demo</p>

<p class=MsoNormal>The <a href="http://fdg.staging.goodpractice.net/">demo</a>
allows you play with Force Directed Graphs of various sorts. Here is a quick
rundown of each option.</p>

<p class=MsoNormal><img border=0 width=453 height=41
src="A%20Force-Directed-Graph%20in%20CoffeeScript_files/image001.jpg"></p>

<p class=MsoNormal>The first dropdown determines the number of copies of each graph
to generate.</p>

<p class=MsoNormal>The second dropdown determines the type of graph to be
generated. Each graph type differs in the number of nodes, the interconnections
between the nodes and the node mass and so each graph self-organises into a
different pattern however the physical constants that determine magnetic
repulsion and spring strength remain the same for all.</p>

<p class=MsoNormal>The third dropdown allows you to change the behaviour of a
node as it encounters the edge of the drawing area. </p>

<p class=MsoNormal><img border=0 width=376 height=50
src="A%20Force-Directed-Graph%20in%20CoffeeScript_files/image002.jpg"></p>

<p class=MsoNormal>The Noise dropdown allows you to introduce random noise into
the mix. It is known that Force Directed Graphs will often beach themselves on
the shores of suboptimal solutions. These locally optimal solutions trap the
pattern close to but not quite at the absolute optimal solutions. Randomness
can help fix that by jiggling the system to overcome the local optima and allow
the system to keep falling towards perfection.</p>

<p class=MsoNormal>The Springs checkbox toggles the springs on and off. How do
the nodes act when they are unfettered?</p>

<p class=MsoNormal>The Magnets checkbox toggles the magnetic repulsor fields on
and off. </p>

<p class=MsoNormal>The Help link brings you back to this page.</p>

<p class=MsoNormal>Definitions</p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal>Graph<br>
     A picture of an interconnected set of items where each item is represented
     by a <i>node</i> and each connection by a <i>link.</i></li>
</ul>

<p class=MsoNormal style='margin-left:36.0pt'><img border=0 width=188
height=124 src="A%20Force-Directed-Graph%20in%20CoffeeScript_files/image003.jpg"></p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal>Force Directed Graph<br>
     A graph that self-organises until its nodes are as far apart as possible
     and the links do not cross. The nodes repulse one another whereas the
     links act like springs.</li>
</ul>

<p class=MsoNormal><br>
<img border=0 width=268 height=142
src="A%20Force-Directed-Graph%20in%20CoffeeScript_files/image004.jpg">   <img
border=0 width=224 height=249
src="A%20Force-Directed-Graph%20in%20CoffeeScript_files/image005.jpg"></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Discussion – What is a Force Directed Graph?</p>

<p class=MsoNormal>Imagine a single tennis ball connected to ten otherwise
identical balls by equal lengths of string. How to disentangle this?</p>

<p class=MsoNormal><img border=0 width=154 height=161
src="A%20Force-Directed-Graph%20in%20CoffeeScript_files/image006.jpg">  </p>

<p class=MsoNormal>You could take the brute force approach and sit cross-legged
unpicking the knots and arranging the balls. Or you could just let the whole
thing self-organise until no balls touch and no strings cross. </p>

<p class=MsoNormal> <img border=0 width=151 height=162
src="A%20Force-Directed-Graph%20in%20CoffeeScript_files/image007.jpg"></p>

<p class=MsoNormal>You may think that a system of tennis balls and string cannot
self-organise but that is not true. This system, like all physical systems,
will organise itself until it reaches a low-energy state. It will stop
self-organising just as soon as no energy-lowering moves remain, in other words,
when every remaining move implies a rise in the energy state of the system. </p>

<p class=MsoNormal>The problem: For tennis balls and string this final state is
vastly more likely to be a tangled mess rather than a pleasing, symmetrical pattern.
We could re-engineer the system using exotic materials but doing this in the
real world would be impractical.</p>

<p class=MsoNormal>The trick is to simulate a node-and-link system (a graph) so
that its lowest energy state happens to resemble the pattern you want. Then the
system will then self-organise as before only this time it will self-organise
to the desired pattern.</p>

<p class=MsoNormal> As a ball rolls downhill so the system will automatically
untangle and organise. It’s not magic, it just looks that way because real
systems overwhelmingly tend not be ordered at low energy states.  Disordered
states so vastly outnumber ordered states that our expectations assume that a
system’s low energy state will be disordered, and this is usually correct.</p>

<p class=MsoNormal>But we don’t want to just define a low energy state and have
the system go there. That’s no fun. Instead we want to simulate a pseudo-real
physical system, albeit one with impractical properties. The complex behaviour should
then just spontaneously emerge from the nature of system itself rather than
then from any top-down pre-definition.</p>

<p class=MsoNormal>To achieve this we must replace the tennis balls with
imaginary repulsor ‘magnets’. The closer these magnets get to each other the
greater the repulsive force they feel. Now replace the link-strings with springs.
The more each spring is stretched the greater the pull on the balls at either
end. Now tweak the strength of the repulsor fields and the attractor-springs
until a nice, critical balance is reached.</p>

<p class=MsoNormal>A system like this will seek a low energy state just like
any real physical system would. As you watch the heaped mess you will see it
writhe and twist, the balls repelling and the springs attracting, untangling
and ordering until it finally assumes a close approximation to the low-energy,
ordered pattern we seek. No external effort is required; the system is powered
by virtual kinetic energy harvested from virtual potential energy as the system
spontaneously falls down an imaginary energy gradient.</p>

<p class=MsoNormal>A Force Directed Graph is therefore a computer
representation of such an edge-case physical system. It models repulsive nodes
and springy edges with the final shape of the optimally ordered pattern being
determined by the graph’s interconnections, the mass of the nodes and the precise
balance of the opposing forces of attraction and repulsion.</p>

<p class=MsoNormal>&nbsp;</p>

</div>

</body>

</html>
